[[template]]
name = "swc"
definition = """({ name, targets, deps, env, templateOptions: { configFile = null, swcRc, sourceMaps = true, config = {}, autoInstall } }) => {
  function setDefaultConfig (defaultCfg) {
    for (const prop of Object.keys(defaultCfg)) {
      if (Object.hasOwnProperty(config, prop)) continue;
      config[prop] = defaultCfg[prop];
    }
  }
  setDefaultConfig({
    'jsc.parser.importAssertions': true,
    'jsc.parser.topLevelAwait': true,
    'jsc.parser.importMeta': true,
    'jsc.parser.privateMethod': true,
    'jsc.parser.dynamicImport': true,
    'jsc.experimental.keepImportAssertions': true
  });
  return [{
    name,
    targets,
    deps: [...deps, '.swcrc', 'node_modules/@swc/core', 'node_modules/@swc/cli'],
    env,
    run: `swc $DEP -o $TARGET${
        !swcRc ? ' --no-swcrc' : ''
      }${
        configFile ? ` --config-file=${configFile}` : ''
      }${
        sourceMaps ? ' --source-maps' : ''
      }${
        Object.keys(config).length ? ' ' + Object.keys(config).map(key => `-C ${key}=${config[key]}`).join(' ') : ''
      }`
  }, {
    target: '.swcrc',
  }, {
    template: 'npm',
    templateOptions: {
      autoInstall,
      packages: ['@swc/core@1', '@swc/cli@0.1'],
      dev: true
    }
  }]
}
"""
